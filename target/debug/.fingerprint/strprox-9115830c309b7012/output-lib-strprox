{"message":"unused imports: `AddAssign`, `ShrAssign`, `Shr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/traits.rs","byte_start":53,"byte_end":62,"line_start":3,"line_end":3,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"    ops::{Add, AddAssign, Div, Mul, Shr, ShrAssign, Sub, Shl},","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/traits.rs","byte_start":74,"byte_end":77,"line_start":3,"line_end":3,"column_start":37,"column_end":40,"is_primary":true,"text":[{"text":"    ops::{Add, AddAssign, Div, Mul, Shr, ShrAssign, Sub, Shl},","highlight_start":37,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/traits.rs","byte_start":79,"byte_end":88,"line_start":3,"line_end":3,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"    ops::{Add, AddAssign, Div, Mul, Shr, ShrAssign, Sub, Shl},","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/strprox/traits.rs","byte_start":51,"byte_end":62,"line_start":3,"line_end":3,"column_start":14,"column_end":25,"is_primary":true,"text":[{"text":"    ops::{Add, AddAssign, Div, Mul, Shr, ShrAssign, Sub, Shl},","highlight_start":14,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/strprox/traits.rs","byte_start":72,"byte_end":88,"line_start":3,"line_end":3,"column_start":35,"column_end":51,"is_primary":true,"text":[{"text":"    ops::{Add, AddAssign, Div, Mul, Shr, ShrAssign, Sub, Shl},","highlight_start":35,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `AddAssign`, `ShrAssign`, `Shr`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/traits.rs:3:16\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ops::{Add, AddAssign, Div, Mul, Shr, ShrAssign, Sub, Shl},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `btree_map`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/hs_tree.rs","byte_start":381,"byte_end":390,"line_start":9,"line_end":9,"column_start":24,"column_end":33,"is_primary":true,"text":[{"text":"use std::collections::{btree_map, BinaryHeap};","highlight_start":24,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/strprox/hs_tree.rs","byte_start":381,"byte_end":392,"line_start":9,"line_end":9,"column_start":24,"column_end":35,"is_primary":true,"text":[{"text":"use std::collections::{btree_map, BinaryHeap};","highlight_start":24,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `btree_map`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/hs_tree.rs:9:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{btree_map, BinaryHeap};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `BTreeSet`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/hs_tree.rs","byte_start":438,"byte_end":446,"line_start":10,"line_end":10,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"use std::collections::{BTreeMap, BTreeSet};","highlight_start":34,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/strprox/hs_tree.rs","byte_start":436,"byte_end":446,"line_start":10,"line_end":10,"column_start":32,"column_end":42,"is_primary":true,"text":[{"text":"use std::collections::{BTreeMap, BTreeSet};","highlight_start":32,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BTreeSet`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/hs_tree.rs:10:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{BTreeMap, BTreeSet};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `AddAssign`, `Add`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/hs_tree.rs","byte_start":464,"byte_end":467,"line_start":11,"line_end":11,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"use std::ops::{Add, AddAssign, Range};","highlight_start":16,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/hs_tree.rs","byte_start":469,"byte_end":478,"line_start":11,"line_end":11,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"use std::ops::{Add, AddAssign, Range};","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/strprox/hs_tree.rs","byte_start":464,"byte_end":480,"line_start":11,"line_end":11,"column_start":16,"column_end":32,"is_primary":true,"text":[{"text":"use std::ops::{Add, AddAssign, Range};","highlight_start":16,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `AddAssign`, `Add`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/hs_tree.rs:11:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::ops::{Add, AddAssign, Range};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"no method named `sibling_index` found for struct `SegmentRange` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/strprox/hs_tree.rs","byte_start":32794,"byte_end":32812,"line_start":656,"line_end":656,"column_start":33,"column_end":51,"is_primary":false,"text":[{"text":"                                substring_segment.sibling_index(LevelCoordinates {","highlight_start":33,"highlight_end":51}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/strprox/hs_tree.rs","byte_start":43990,"byte_end":44019,"line_start":865,"line_end":865,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"impl_hs_tree!(u8 u16 u32 u64);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_hs_tree!","def_site_span":{"file_name":"src/strprox/hs_tree.rs","byte_start":5300,"byte_end":5325,"line_start":141,"line_end":141,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! impl_hs_tree {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/strprox/hs_tree.rs","byte_start":1508,"byte_end":1530,"line_start":41,"line_end":41,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"struct SegmentRange<U> {","highlight_start":1,"highlight_end":23}],"label":"method `sibling_index` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/hs_tree.rs","byte_start":32812,"byte_end":32825,"line_start":656,"line_end":656,"column_start":51,"column_end":64,"is_primary":true,"text":[{"text":"                                substring_segment.sibling_index(LevelCoordinates {","highlight_start":51,"highlight_end":64}],"label":"method not found in `SegmentRange<u8>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/strprox/hs_tree.rs","byte_start":43990,"byte_end":44019,"line_start":865,"line_end":865,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"impl_hs_tree!(u8 u16 u32 u64);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_hs_tree!","def_site_span":{"file_name":"src/strprox/hs_tree.rs","byte_start":5300,"byte_end":5325,"line_start":141,"line_end":141,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! impl_hs_tree {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `sibling_index` found for struct `SegmentRange` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/hs_tree.rs:656:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct SegmentRange<U> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod `sibling_index` not found for this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m656\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                substring_segment.sibling_index(LevelCoordinates {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `SegmentRange<u8>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m865\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_hs_tree!(u8 u16 u32 u64);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_hs_tree` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find function `multiextension` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/strprox/hs_tree.rs","byte_start":43620,"byte_end":43634,"line_start":850,"line_end":850,"column_start":53,"column_end":67,"is_primary":true,"text":[{"text":"                                                    multiextension(string, query, threshold, matches);","highlight_start":53,"highlight_end":67}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/strprox/hs_tree.rs","byte_start":43990,"byte_end":44019,"line_start":865,"line_end":865,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"impl_hs_tree!(u8 u16 u32 u64);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_hs_tree!","def_site_span":{"file_name":"src/strprox/hs_tree.rs","byte_start":5300,"byte_end":5325,"line_start":141,"line_end":141,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! impl_hs_tree {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `multiextension` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/hs_tree.rs:850:53\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m850\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                                    multiextension(string, query, threshold, matches);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m865\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_hs_tree!(u8 u16 u32 u64);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_hs_tree` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"no method named `sibling_index` found for struct `SegmentRange` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/strprox/hs_tree.rs","byte_start":32794,"byte_end":32812,"line_start":656,"line_end":656,"column_start":33,"column_end":51,"is_primary":false,"text":[{"text":"                                substring_segment.sibling_index(LevelCoordinates {","highlight_start":33,"highlight_end":51}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/strprox/hs_tree.rs","byte_start":43990,"byte_end":44019,"line_start":865,"line_end":865,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"impl_hs_tree!(u8 u16 u32 u64);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_hs_tree!","def_site_span":{"file_name":"src/strprox/hs_tree.rs","byte_start":5300,"byte_end":5325,"line_start":141,"line_end":141,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! impl_hs_tree {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/strprox/hs_tree.rs","byte_start":1508,"byte_end":1530,"line_start":41,"line_end":41,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"struct SegmentRange<U> {","highlight_start":1,"highlight_end":23}],"label":"method `sibling_index` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/hs_tree.rs","byte_start":32812,"byte_end":32825,"line_start":656,"line_end":656,"column_start":51,"column_end":64,"is_primary":true,"text":[{"text":"                                substring_segment.sibling_index(LevelCoordinates {","highlight_start":51,"highlight_end":64}],"label":"method not found in `SegmentRange<u16>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/strprox/hs_tree.rs","byte_start":43990,"byte_end":44019,"line_start":865,"line_end":865,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"impl_hs_tree!(u8 u16 u32 u64);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_hs_tree!","def_site_span":{"file_name":"src/strprox/hs_tree.rs","byte_start":5300,"byte_end":5325,"line_start":141,"line_end":141,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! impl_hs_tree {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `sibling_index` found for struct `SegmentRange` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/hs_tree.rs:656:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct SegmentRange<U> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod `sibling_index` not found for this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m656\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                substring_segment.sibling_index(LevelCoordinates {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `SegmentRange<u16>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m865\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_hs_tree!(u8 u16 u32 u64);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_hs_tree` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"no method named `sibling_index` found for struct `SegmentRange` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/strprox/hs_tree.rs","byte_start":32794,"byte_end":32812,"line_start":656,"line_end":656,"column_start":33,"column_end":51,"is_primary":false,"text":[{"text":"                                substring_segment.sibling_index(LevelCoordinates {","highlight_start":33,"highlight_end":51}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/strprox/hs_tree.rs","byte_start":43990,"byte_end":44019,"line_start":865,"line_end":865,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"impl_hs_tree!(u8 u16 u32 u64);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_hs_tree!","def_site_span":{"file_name":"src/strprox/hs_tree.rs","byte_start":5300,"byte_end":5325,"line_start":141,"line_end":141,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! impl_hs_tree {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/strprox/hs_tree.rs","byte_start":1508,"byte_end":1530,"line_start":41,"line_end":41,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"struct SegmentRange<U> {","highlight_start":1,"highlight_end":23}],"label":"method `sibling_index` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/hs_tree.rs","byte_start":32812,"byte_end":32825,"line_start":656,"line_end":656,"column_start":51,"column_end":64,"is_primary":true,"text":[{"text":"                                substring_segment.sibling_index(LevelCoordinates {","highlight_start":51,"highlight_end":64}],"label":"method not found in `SegmentRange<u32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/strprox/hs_tree.rs","byte_start":43990,"byte_end":44019,"line_start":865,"line_end":865,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"impl_hs_tree!(u8 u16 u32 u64);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_hs_tree!","def_site_span":{"file_name":"src/strprox/hs_tree.rs","byte_start":5300,"byte_end":5325,"line_start":141,"line_end":141,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! impl_hs_tree {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `sibling_index` found for struct `SegmentRange` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/hs_tree.rs:656:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct SegmentRange<U> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod `sibling_index` not found for this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m656\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                substring_segment.sibling_index(LevelCoordinates {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `SegmentRange<u32>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m865\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_hs_tree!(u8 u16 u32 u64);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_hs_tree` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"no method named `sibling_index` found for struct `SegmentRange` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/strprox/hs_tree.rs","byte_start":32794,"byte_end":32812,"line_start":656,"line_end":656,"column_start":33,"column_end":51,"is_primary":false,"text":[{"text":"                                substring_segment.sibling_index(LevelCoordinates {","highlight_start":33,"highlight_end":51}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/strprox/hs_tree.rs","byte_start":43990,"byte_end":44019,"line_start":865,"line_end":865,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"impl_hs_tree!(u8 u16 u32 u64);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_hs_tree!","def_site_span":{"file_name":"src/strprox/hs_tree.rs","byte_start":5300,"byte_end":5325,"line_start":141,"line_end":141,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! impl_hs_tree {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/strprox/hs_tree.rs","byte_start":1508,"byte_end":1530,"line_start":41,"line_end":41,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"struct SegmentRange<U> {","highlight_start":1,"highlight_end":23}],"label":"method `sibling_index` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/hs_tree.rs","byte_start":32812,"byte_end":32825,"line_start":656,"line_end":656,"column_start":51,"column_end":64,"is_primary":true,"text":[{"text":"                                substring_segment.sibling_index(LevelCoordinates {","highlight_start":51,"highlight_end":64}],"label":"method not found in `SegmentRange<u64>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/strprox/hs_tree.rs","byte_start":43990,"byte_end":44019,"line_start":865,"line_end":865,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"impl_hs_tree!(u8 u16 u32 u64);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_hs_tree!","def_site_span":{"file_name":"src/strprox/hs_tree.rs","byte_start":5300,"byte_end":5325,"line_start":141,"line_end":141,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! impl_hs_tree {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `sibling_index` found for struct `SegmentRange` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/hs_tree.rs:656:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct SegmentRange<U> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod `sibling_index` not found for this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m656\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                substring_segment.sibling_index(LevelCoordinates {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `SegmentRange<u64>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m865\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_hs_tree!(u8 u16 u32 u64);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_hs_tree` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 5 previous errors; 4 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 5 previous errors; 4 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0425, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0425, E0599.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0425`.\u001b[0m\n"}
