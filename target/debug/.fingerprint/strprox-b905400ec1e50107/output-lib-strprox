{"message":"unused imports: `BTreeSet`, `Reverse`, `result`, `string`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/prefix/mod.rs","byte_start":31,"byte_end":38,"line_start":2,"line_end":2,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"    cmp::{max, min, Reverse},","highlight_start":21,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/prefix/mod.rs","byte_start":79,"byte_end":87,"line_start":3,"line_end":3,"column_start":39,"column_end":47,"is_primary":true,"text":[{"text":"    collections::{hash_map, BTreeMap, BTreeSet, HashMap},","highlight_start":39,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/prefix/mod.rs","byte_start":144,"byte_end":150,"line_start":6,"line_end":6,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    result, string,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/prefix/mod.rs","byte_start":152,"byte_end":158,"line_start":6,"line_end":6,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"    result, string,","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/strprox/prefix/mod.rs","byte_start":29,"byte_end":38,"line_start":2,"line_end":2,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    cmp::{max, min, Reverse},","highlight_start":19,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/strprox/prefix/mod.rs","byte_start":77,"byte_end":87,"line_start":3,"line_end":3,"column_start":37,"column_end":47,"is_primary":true,"text":[{"text":"    collections::{hash_map, BTreeMap, BTreeSet, HashMap},","highlight_start":37,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/strprox/prefix/mod.rs","byte_start":138,"byte_end":158,"line_start":5,"line_end":6,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"    ops::Range,","highlight_start":15,"highlight_end":16},{"text":"    result, string,","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BTreeSet`, `Reverse`, `result`, `string`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/prefix/mod.rs:2:21\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cmp::{max, min, Reverse},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    collections::{hash_map, BTreeMap, BTreeSet, HashMap},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    result, string,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `MeasuredString`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/prefix/mod.rs","byte_start":192,"byte_end":206,"line_start":9,"line_end":9,"column_start":29,"column_end":43,"is_primary":true,"text":[{"text":"use super::{MeasuredPrefix, MeasuredString};","highlight_start":29,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/strprox/prefix/mod.rs","byte_start":190,"byte_end":206,"line_start":9,"line_end":9,"column_start":27,"column_end":43,"is_primary":true,"text":[{"text":"use super::{MeasuredPrefix, MeasuredString};","highlight_start":27,"highlight_end":43}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `MeasuredString`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/prefix/mod.rs:9:29\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::{MeasuredPrefix, MeasuredString};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused variable: `ancestor`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":1150,"byte_end":1158,"line_start":37,"line_end":37,"column_start":15,"column_end":23,"is_primary":true,"text":[{"text":"    fn insert(ancestor: &'stored Node<UUU, SSS>, nodes: &'stored [Node<UUU, SSS>], depth: UUU) {}","highlight_start":15,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":1150,"byte_end":1158,"line_start":37,"line_end":37,"column_start":15,"column_end":23,"is_primary":true,"text":[{"text":"    fn insert(ancestor: &'stored Node<UUU, SSS>, nodes: &'stored [Node<UUU, SSS>], depth: UUU) {}","highlight_start":15,"highlight_end":23}],"label":null,"suggested_replacement":"_ancestor","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ancestor`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/prefix/compact_tree.rs:37:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn insert(ancestor: &'stored Node<UUU, SSS>, nodes: &'stored [Node<UUU, SSS>], depth: UUU) {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ancestor`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `nodes`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":1185,"byte_end":1190,"line_start":37,"line_end":37,"column_start":50,"column_end":55,"is_primary":true,"text":[{"text":"    fn insert(ancestor: &'stored Node<UUU, SSS>, nodes: &'stored [Node<UUU, SSS>], depth: UUU) {}","highlight_start":50,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":1185,"byte_end":1190,"line_start":37,"line_end":37,"column_start":50,"column_end":55,"is_primary":true,"text":[{"text":"    fn insert(ancestor: &'stored Node<UUU, SSS>, nodes: &'stored [Node<UUU, SSS>], depth: UUU) {}","highlight_start":50,"highlight_end":55}],"label":null,"suggested_replacement":"_nodes","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `nodes`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/prefix/compact_tree.rs:37:50\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn insert(ancestor: &'stored Node<UUU, SSS>, nodes: &'stored [Node<UUU, SSS>], depth: UUU) {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_nodes`\u001b[0m\n\n"}
{"message":"unused variable: `depth`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":1219,"byte_end":1224,"line_start":37,"line_end":37,"column_start":84,"column_end":89,"is_primary":true,"text":[{"text":"    fn insert(ancestor: &'stored Node<UUU, SSS>, nodes: &'stored [Node<UUU, SSS>], depth: UUU) {}","highlight_start":84,"highlight_end":89}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":1219,"byte_end":1224,"line_start":37,"line_end":37,"column_start":84,"column_end":89,"is_primary":true,"text":[{"text":"    fn insert(ancestor: &'stored Node<UUU, SSS>, nodes: &'stored [Node<UUU, SSS>], depth: UUU) {}","highlight_start":84,"highlight_end":89}],"label":null,"suggested_replacement":"_depth","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `depth`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/prefix/compact_tree.rs:37:84\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn insert(ancestor: &'stored Node<UUU, SSS>, nodes: &'stored [Node<UUU, SSS>], depth: UUU) {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_depth`\u001b[0m\n\n"}
{"message":"methods `preorder` and `preorder_node` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/prefix/mod.rs","byte_start":2014,"byte_end":2051,"line_start":65,"line_end":65,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"impl<'stored> Trie<'stored, UUU, SSS> {","highlight_start":1,"highlight_end":38}],"label":"methods in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/prefix/mod.rs","byte_start":7500,"byte_end":7508,"line_start":203,"line_end":203,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    fn preorder<VisitorFn>(&self, visitor: &mut VisitorFn)","highlight_start":8,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/prefix/mod.rs","byte_start":7760,"byte_end":7773,"line_start":210,"line_end":210,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":"    fn preorder_node<VisitorFn>(&self, visitor: &mut VisitorFn, node: &Node<UUU, SSS>)","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: methods `preorder` and `preorder_node` are never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/prefix/mod.rs:203:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl<'stored> Trie<'stored, UUU, SSS> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethods in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn preorder<VisitorFn>(&self, visitor: &mut VisitorFn)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn preorder_node<VisitorFn>(&self, visitor: &mut VisitorFn, node: &Node<UUU, SSS>)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"type alias `UUU` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":44,"byte_end":47,"line_start":3,"line_end":3,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"type UUU = u8;","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `UUU` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/prefix/compact_tree.rs:3:6\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype UUU = u8;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"type alias `SSS` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":59,"byte_end":62,"line_start":4,"line_end":4,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"type SSS = u32;","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `SSS` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/prefix/compact_tree.rs:4:6\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype SSS = u32;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"fields `node`, `children`, and `parent` are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":77,"byte_end":92,"line_start":5,"line_end":5,"column_start":8,"column_end":23,"is_primary":false,"text":[{"text":"struct CompactTreeNode<'stored, UUU, SSS> {","highlight_start":8,"highlight_end":23}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":118,"byte_end":122,"line_start":6,"line_end":6,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    node: &'stored Node<UUU, SSS>,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":153,"byte_end":161,"line_start":7,"line_end":7,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    children: ChildrenList<'stored, UUU, SSS>,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":200,"byte_end":206,"line_start":8,"line_end":8,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    parent: Option<Box<CompactTreeNode<'stored, UUU, SSS>>>,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: fields `node`, `children`, and `parent` are never read\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/prefix/compact_tree.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct CompactTreeNode<'stored, UUU, SSS> {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    node: &'stored Node<UUU, SSS>,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    children: ChildrenList<'stored, UUU, SSS>,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    parent: Option<Box<CompactTreeNode<'stored, UUU, SSS>>>,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"fields `node` and `next` are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":267,"byte_end":283,"line_start":11,"line_end":11,"column_start":8,"column_end":24,"is_primary":false,"text":[{"text":"struct ChildrenListNode<'stored, UUU, SSS> {","highlight_start":8,"highlight_end":24}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":309,"byte_end":313,"line_start":12,"line_end":12,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    node: CompactTreeNode<'stored, UUU, SSS>,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":355,"byte_end":359,"line_start":13,"line_end":13,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    next: Option<Box<ChildrenListNode<'stored, UUU, SSS>>>,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: fields `node` and `next` are never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/prefix/compact_tree.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct ChildrenListNode<'stored, UUU, SSS> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    node: CompactTreeNode<'stored, UUU, SSS>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    next: Option<Box<ChildrenListNode<'stored, UUU, SSS>>>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"field `head` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":504,"byte_end":516,"line_start":18,"line_end":18,"column_start":8,"column_end":20,"is_primary":false,"text":[{"text":"struct ChildrenList<'stored, UUU, SSS> {","highlight_start":8,"highlight_end":20}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":542,"byte_end":546,"line_start":19,"line_end":19,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    head: Option<Box<ChildrenListNode<'stored, UUU, SSS>>>,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `head` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/prefix/compact_tree.rs:19:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct ChildrenList<'stored, UUU, SSS> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    head: Option<Box<ChildrenListNode<'stored, UUU, SSS>>>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"struct `CompactTree` is never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":674,"byte_end":685,"line_start":23,"line_end":23,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"struct CompactTree<'stored, UUU, SSS> {","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct `CompactTree` is never constructed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/prefix/compact_tree.rs:23:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct CompactTree<'stored, UUU, SSS> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated functions `new` and `insert` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":764,"byte_end":808,"line_start":27,"line_end":27,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"impl<'stored> CompactTree<'stored, UUU, SSS> {","highlight_start":1,"highlight_end":45}],"label":"associated functions in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":875,"byte_end":878,"line_start":29,"line_end":29,"column_start":8,"column_end":11,"is_primary":true,"text":[{"text":"    fn new(trie: &'stored Trie<'stored, UUU, SSS>) -> Self {","highlight_start":8,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/strprox/prefix/compact_tree.rs","byte_start":1143,"byte_end":1149,"line_start":37,"line_end":37,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":"    fn insert(ancestor: &'stored Node<UUU, SSS>, nodes: &'stored [Node<UUU, SSS>], depth: UUU) {}","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated functions `new` and `insert` are never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/strprox/prefix/compact_tree.rs:29:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl<'stored> CompactTree<'stored, UUU, SSS> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated functions in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// Constructs a CompactTree with the root of a trie\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn new(trie: &'stored Trie<'stored, UUU, SSS>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn insert(ancestor: &'stored Node<UUU, SSS>, nodes: &'stored [Node<UUU, SSS>], depth: UUU) {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"13 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 13 warnings emitted\u001b[0m\n\n"}
